{"file":"E:\\MyProjects\\bd-calculator\\src\\components\\button\\__tests__\\index.test.tsx","mappings":";;;;;AAAA,kDAA0B;AAC1B,gEAAkE;AAClE,qDAAwC;AAExC,QAAQ,CAAC,4BAA4B,EAAE,GAAG,EAAE;IAC1C,EAAE,CAAC,yBAAyB,EAAE,GAAG,EAAE;QACjC,MAAM,EAAE,SAAS,EAAE,GAAG,IAAA,qBAAM,EAC1B,CAAC,eAAgB,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC,CAAC,EAAE,eAAgB,CAAC,CAC1D,CAAC;QACF,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;QAC9B,MAAM,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE,GAAG,EAAE;QAC7D,MAAM,WAAW,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QAC9B,MAAM,EAAE,SAAS,EAAE,GAAG,IAAA,qBAAM,EAC1B,CAAC,eAAgB,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,eAAgB,CAAC,CAC7D,CAAC;QACF,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;QAC9B,wBAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACxB,MAAM,CAAC,WAAW,CAAC,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qEAAqE,EAAE,GAAG,EAAE;QAC7E,MAAM,EAAE,SAAS,EAAE,GAAG,IAAA,qBAAM,EAC1B,CAAC,eAAgB,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC,CAAC,EAAE,eAAgB,CAAC,CAC1D,CAAC;QACF,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;QAC9B,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC;YACzB,KAAK,EAAE,SAAS;SACjB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iFAAiF,EAAE,GAAG,EAAE;QACzF,MAAM,EAAE,SAAS,EAAE,GAAG,IAAA,qBAAM,EAC1B,CAAC,eAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAC3C;;MACF,EAAE,eAAgB,CAAC,CACpB,CAAC;QACF,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;QAC9B,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC;YACzB,KAAK,EAAE,SAAS;SACjB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEL,mFAAmF;IACnF,8CAA8C;IAC9C,kEAAkE;IAClE,SAAS;IACT,qCAAqC;IACrC,mCAAmC;IACnC,2EAA2E;IAC3E,mCAAmC;IACnC,oCAAoC;IACpC,UAAU;IACV,QAAQ;AACR,CAAC,CAAC,CAAC","names":[],"sources":["E:\\MyProjects\\bd-calculator\\src\\components\\button\\__tests__\\index.test.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { render, fireEvent } from \"@testing-library/react-native\";\r\nimport ButtonCalculator from \"../index\";\r\n\r\ndescribe(\"ButtonCalculator component\", () => {\r\n  it(\"Should render correctly\", () => {\r\n    const { getByText } = render(\r\n      <ButtonCalculator onPress={() => {}}>5</ButtonCalculator>\r\n    );\r\n    const button = getByText(\"5\");\r\n    expect(button).toBeTruthy();\r\n  });\r\n\r\n  it(\"Should call onPress function when button is pressed\", () => {\r\n    const onPressMock = jest.fn();\r\n    const { getByText } = render(\r\n      <ButtonCalculator onPress={onPressMock}>5</ButtonCalculator>\r\n    );\r\n    const button = getByText(\"5\");\r\n    fireEvent.press(button);\r\n    expect(onPressMock).toHaveBeenCalledWith(\"5\");\r\n  });\r\n\r\n  it(\"Should apply styles.buttonText style if operator prop is not passed\", () => {\r\n    const { getByText } = render(\r\n      <ButtonCalculator onPress={() => {}}>5</ButtonCalculator>\r\n    );\r\n    const button = getByText(\"5\");\r\n    expect(button).toHaveStyle({\r\n      color: \"#FFFFFF\",\r\n    });\r\n  });\r\n\r\n  it(\"Should apply styles.buttonTextOperator style if operator prop is passed as true\", () => {\r\n    const { getByText } = render(\r\n      <ButtonCalculator operator onPress={() => {}}>\r\n        +\r\n      </ButtonCalculator>\r\n    );\r\n    const button = getByText(\"+\");\r\n    expect(button).toHaveStyle({\r\n      color: \"#000000\",\r\n    });\r\n  });\r\n\r\n//   it(\"Should change background color to #F0F0F0 when button is hovered\", () => {\r\n//     const { getByText, rerender } = render(\r\n//       <ButtonCalculator onPress={() => {}}>5</ButtonCalculator>\r\n//     );\r\n//     const button = getByText(\"5\");\r\n//     fireEvent.longPress(button);\r\n//     rerender(<ButtonCalculator onPress={() => {}}>5</ButtonCalculator>);\r\n//     expect(button).toHaveStyle({\r\n//       backgroundColor: \"#F0F0F0\",\r\n//     });\r\n//   });\r\n});\r\n"],"version":3}