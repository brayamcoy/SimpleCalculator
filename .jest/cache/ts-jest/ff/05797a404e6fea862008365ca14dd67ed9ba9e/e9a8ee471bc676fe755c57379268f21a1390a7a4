[["E:\\MyProjects\\bd-calculator\\src\\screens\\__tests__\\index.test.tsx",{"fileContent":"import React from \"react\";\r\nimport { render, fireEvent } from \"@testing-library/react-native\";\r\nimport Calculator from \"../main\";\r\n\r\ndescribe(\"Calculator Screen\", () => {\r\n  it(\"renders correctly\", () => {\r\n    const { getByText } = render(<Calculator />);\r\n    expect(getByText(\"0\")).toBeTruthy();\r\n  });\r\n\r\n  it(\"inputs numbers correctly\", () => {\r\n    const { getByText } = render(<Calculator />);\r\n    const button1 = getByText(\"1\");\r\n    fireEvent.press(button1);\r\n    expect(getByText(\"1\")).toBeTruthy();\r\n  });\r\n\r\n  it(\"inputs operators correctly\", () => {\r\n    const { getByText } = render(<Calculator />);\r\n    const buttonPlus = getByText(\"+\");\r\n    fireEvent.press(buttonPlus);\r\n    expect(getByText(\"+\")).toBeTruthy();\r\n  });\r\n});\r\n","resolvedModuleNames":["E:/MyProjects/bd-calculator/src/screens/main/index.tsx","E:/MyProjects/bd-calculator/src/components/button/index.tsx","E:/MyProjects/bd-calculator/App.styles.tsx","E:/MyProjects/bd-calculator/src/hooks/useCalculator.tsx"]}],["E:\\MyProjects\\bd-calculator\\src\\components\\button\\__tests__\\index.test.tsx",{"fileContent":"import React from \"react\";\r\nimport { render, fireEvent } from \"@testing-library/react-native\";\r\nimport ButtonCalculator from \"../index\";\r\n\r\ndescribe(\"ButtonCalculator component\", () => {\r\n  it(\"Should render correctly\", () => {\r\n    const { getByText } = render(\r\n      <ButtonCalculator onPress={() => {}}>5</ButtonCalculator>\r\n    );\r\n    const button = getByText(\"5\");\r\n    expect(button).toBeTruthy();\r\n  });\r\n\r\n  it(\"Should call onPress function when button is pressed\", () => {\r\n    const onPressMock = jest.fn();\r\n    const { getByText } = render(\r\n      <ButtonCalculator onPress={onPressMock}>5</ButtonCalculator>\r\n    );\r\n    const button = getByText(\"5\");\r\n    fireEvent.press(button);\r\n    expect(onPressMock).toHaveBeenCalledWith(\"5\");\r\n  });\r\n\r\n  it(\"Should apply styles.buttonText style if operator prop is not passed\", () => {\r\n    const { getByText } = render(\r\n      <ButtonCalculator onPress={() => {}}>5</ButtonCalculator>\r\n    );\r\n    const button = getByText(\"5\");\r\n    expect(button).toHaveStyle({\r\n      color: \"#FFFFFF\",\r\n    });\r\n  });\r\n\r\n  it(\"Should apply styles.buttonTextOperator style if operator prop is passed as true\", () => {\r\n    const { getByText } = render(\r\n      <ButtonCalculator operator onPress={() => {}}>\r\n        +\r\n      </ButtonCalculator>\r\n    );\r\n    const button = getByText(\"+\");\r\n    expect(button).toHaveStyle({\r\n      color: \"#000000\",\r\n    });\r\n  });\r\n\r\n//   it(\"Should change background color to #F0F0F0 when button is hovered\", () => {\r\n//     const { getByText, rerender } = render(\r\n//       <ButtonCalculator onPress={() => {}}>5</ButtonCalculator>\r\n//     );\r\n//     const button = getByText(\"5\");\r\n//     fireEvent.longPress(button);\r\n//     rerender(<ButtonCalculator onPress={() => {}}>5</ButtonCalculator>);\r\n//     expect(button).toHaveStyle({\r\n//       backgroundColor: \"#F0F0F0\",\r\n//     });\r\n//   });\r\n});\r\n","resolvedModuleNames":["E:/MyProjects/bd-calculator/src/components/button/index.tsx","E:/MyProjects/bd-calculator/App.styles.tsx"]}]]